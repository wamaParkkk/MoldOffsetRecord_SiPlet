<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerDisplay.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>138, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADa
        DQAAAk1TRnQBSQFMAgEBAgEAASABAAEgAQABGQEAARkBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABZAMAARkDAAEBAQABCAUAAcQBCRgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/CAAC9ALzAfID8wL0
        Af8NAAG8AWwBrgHsAfIKAAHwAfcBvAH/NwAB/wP0AfMC8QHyAvMBGQHzAfQB/wwAAf8BkQHvAfQB7AEH
        CAABBwFoAW8B6gEHNwAB/wHzAfIE8QHyAvMBCQHcAfMB9AkAAf8DAAH/AZEB7wH/AewB8wYAAQcBaALj
        AW8B7DQAAf8B9AHzAvIB8QPwAfEB8gLzAdwC2wEZAfMC9AYAAbwBBwMAAf8BkQHvAfMB9wUAAQcBaAPj
        AWgB7zMAAf8C9AHzAvEE8AHxAfIC8wHbAtQB2wEZAvQC/wQAAe8BrgEHAgAB/wHsAQcB/wGRBAAB/wFt
        A+MBaAHtAf8zAAL0A/EF8AHxAfIC8wHbAtQB2wEJAfMD9AQAAQcBvAHtAQcB/wHsAQcC/wHsAgAB8wH3
        AesBbgLjAWgB7QH/NAAC9AHxCPAB8gLzAdsC1AHbAdwB8gH0Af8B9AQAAfMB7AH/Ae0BbAEHA/8BrgHy
        AQAB7wFoARcB4wFvARIB9wH/NQAC9AHxBfADvAHxAvMB3AHaAdQB2wHcAfIB9AH/AfQFAAHtAe8B/wHx
        A/8B8wH/AesC8gFmAW4BFwFtAf83AAL0AfED8AG8AQcBkwF0AXUBmgEbAfMBGQEJAtsB3AHyAfQB/wH0
        BQAB8QFmAesB7wEHAe8B/wH3Av8BrgFtAfIBZgFoAe04AAL0AfEB8AG8AQcCkwF0AlMBegGaAhoB8AIJ
        ARkB8wH0Af8B9AUAAfABEgF0Am4BbQHsAv8BvAFtAfMBrgHxAe8B8DgAAvQB8QG8AQcBdAFMA00DUwF6
        AZoBGgTzAfQB/wH0AgABvAHyAfABEgV6AW4B7AG8AW0B8wFtAWwB8ToAAvQBBwGTAXUGTQNTAXUBegGa
        ARoBGwHzAfQB/wH0AQAB9AESAW4B6gN6AZoBwwH2AcMB6wFsAfMBbQEHAf8BrgHxOAAB9AEbARoBdAHj
        CE0EUwJ6AhoB8wH/AfQBAAHvAXQEegHDAv8B8wG8AW0B8wFtAQcD/wGuAewBrgHtAfI0AAH/AZoBdQtN
        BFMCWQGaARoB/wH0AQAB7wHqAXkCegEaAv8BBwFsAa4B8wJtAewB/wH3AfMD/wHzAewB7zMAAfQBvQF1
        C00GUwF1AXoBmgHzAfQBAAHwAW0CegL/AfQBbAH0Af8BrgH3AcMBbgHsBP8BBwHvAf8B7AHxMwABGgGU
        C00HUwF6AZoBGwH0AQAB8QFuAnoC/wHsAQcB/wH0AWwB8AH2AXoBbgHvAv8BBwHsAZEB7wH0AZEzAAH0
        ARoMTQVTAXoBmgEbAfQB/wEAAbwBbgJ6Af8B8gFsAf8BBwFsAe8B/wHDAXoBcwEHAf8BBwHsAv8BkQHv
        AW0zAAH0ARsBdQtNBFMBegGaARsB8wH/AQAB9wESAXQCegHDAf8B9wFsAa4B9AL/AZoBegFzAe8B8QHq
        Af8CAAH/AZEBbDQAAfQBGgF1Ck0DUwF6ARoB9gH0AwAB9wF0BHoB9gH/AfID/wHDAnoBeQHsAf8B7QEH
        AwAB/wG8NAAB9AH2AZQLTQFTAXkBmgH2AfQB/wMAAfMB6gJuA3oBwwP/ARoDegFzARIBBwH/Ae0BBzgA
        Af8B9AEaAXUKTQFTAVIBmgH0Af8EAAH/AbwB8wHvAXMJegFtAQcB9wGuAewBvAGuAQc5AAHzAZoITQRT
        AZoB8wH0BwAB/wH3AXMHegHqAfADAAHzAQcB7wG8Af84AAH0Ab0B4wNNAXUBegGaAXUETAGZAfMB9AgA
        Ae8BdAF6AXQBbgJzAnoB6gH/QAAB9AHzAZQBdQHjAXUBmgEaARsBGgFvA0wBkwHzAfQIAAH3AW0BdAFt
        AvIB7wFzAXQBEgH0QQAB9AEbAb0BlAEbAfMB/wH0AfIBkwFvAUwBbwEHAv8JAAHzAZIB8gIAAf8BrgEH
        AfQ9AAFCAU0BPgcAAT4DAAEoAwABZAMAARkDAAEBAQABAQUAAZABARYAA/8BAAH+AQABPwH+AQ8B/AoA
        AfgBAAEfAf4BBwH4CgAB+AEAAR8B9wEDAfAKAAHAAQABAwHzAYMB4AoAAYACAAHxAYMBwAoAAYACAAHw
        AQMBAAFACQABgAIAAfABAQEAAcAJAAGAAgAB+AEAAQMBwAkAAYACAAH4AQABBwHACQABgAIAAfgBAAEH
        AcAJAAGAAgABwAEAAR8BwAkAAYACAAGAAQABDwHADAABgAIAAcAMAAGAAgABQAwAAUAMAAGAAgABQAwA
        AYACAAFADAABgAIAAYABAAEGCgABwAEAAQMBgAEAAQcKAAHAAQABAwGAAQABAwHACQABwAEAAQcBgAEA
        AQEBwAkAAfABAAEHAfABAAHgAcAJAAHwAQABBwH4AQAB/wHACQAB8AEAAQcB+AEAAf8BwAkAAfgBAAEH
        AfwBYQH/AcAJAAs=
</value>
  </data>
</root>